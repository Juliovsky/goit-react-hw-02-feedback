{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Feedbacks.js","App.js","index.js"],"names":["FeedbackOptions","handleClick","type","name","onClick","Notification","message","Statistic","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Feedback","state","e","target","setState","prev","this","Math","round","total","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2NAEO,SAASA,EAAT,GAAwC,IAAdC,EAAa,EAAbA,YAC7B,OACI,6BACI,4BAAQC,KAAK,SACLC,KAAK,OACLC,QAAWH,GAFnB,QAGA,4BAAQC,KAAK,SACLC,KAAK,UACLC,QAASH,GAFjB,WAGA,4BAAQC,KAAK,SACLC,KAAK,MACLC,QAASH,GAFjB,QCTL,SAASI,EAAT,GAAkC,IAAVC,EAAS,EAATA,QAE3B,OACI,2BAAIA,GCDL,SAASC,EAAT,GAA6F,IAAxEC,EAAuE,EAAvEA,KAAKC,EAAkE,EAAlEA,QAAQC,EAA0D,EAA1DA,IAAKC,EAAqD,EAArDA,mBAAmBC,EAAkC,EAAlCA,gCAErD,OAAKJ,GAAQC,GAAWC,GAAK,EAErB,6BACI,mCAASF,GACT,sCAAYC,GACZ,kCAAQC,GACR,oCAAUC,GACV,kDAAwBC,EAAxB,OAKJ,kBAACP,EAAD,CAAcC,QAAQ,sB,ICqC3BO,E,4MAhDXC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTT,YAAc,SAAAc,GACV,IAAMZ,EAAOY,EAAEC,OAAOb,KACtB,EAAKc,UAAS,SAAAC,GAAI,sBACjBf,EAAOe,EAAKf,GAAQ,O,mEAQrB,OAHagB,KAAKL,MAAMN,KACRW,KAAKL,MAAML,QACfU,KAAKL,MAAMJ,M,wDAKvB,OAAGS,KAAKL,MAAMN,KACPY,KAAKC,MAAsB,IAAhBF,KAAKL,MAAMN,KAASW,KAAKR,sBAEhC,I,+BAKX,OACI,oCACI,yDACA,kBAACX,EAAD,CACIC,YAAakB,KAAKlB,cAEtB,kBAACM,EAAD,CACIC,KAAMW,KAAKL,MAAMN,KACjBC,QAASU,KAAKL,MAAML,QACpBC,IAAKS,KAAKL,MAAMJ,IAChBY,MAAOH,KAAKL,MAAMQ,MAClBX,mBAAsBQ,KAAKR,qBAC3BC,gCAAmCO,KAAKP,yC,GA1CrCW,aCMRC,MARf,WACE,OACF,oCACE,kBAAC,EAAD,QCFFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7b8a9b6e.chunk.js","sourcesContent":["import React from 'react';\n\nexport function FeedbackOptions({handleClick}){\n    return (\n        <div>\n            <button type=\"submit\"\n                    name=\"good\"\n                    onClick = {handleClick}>good</button>\n            <button type=\"submit\"\n                    name=\"neutral\"\n                    onClick={handleClick}>neutral</button>\n            <button type=\"submit\"\n                    name=\"bad\"\n                    onClick={handleClick}>bad</button>\n        </div>\n\n    )\n}","import React from \"react\";\n\nexport function Notification ({message}){\n\n    return (\n        <p>{message}</p>\n    )\n\n}","import React from \"react\";\nimport {Notification} from \"../Notification/Notification\";\n\n\nexport function Statistic ({good,neutral,bad, countTotalFeedback,countPositiveFeedbackPercentage}) {\n\n            if ((good || neutral || bad)>0) {\n                return (\n                    <div>\n                        <p>Good {good}</p>\n                        <p>Neutral {neutral}</p>\n                        <p>Bad {bad}</p>\n                        <p>Total {countTotalFeedback}</p>\n                        <p>Positive percentage {countPositiveFeedbackPercentage} %</p>\n                    </div>\n                )\n            }else{\n                return (\n                    <Notification message=\"No feedback given\"/>\n                )\n            }\n\n}\n","import React, {Component} from \"react\";\nimport {FeedbackOptions} from './FeedbackOptions/FeedbackOptions';\nimport {Statistic} from './Statistics/Statistics'\n\n\n\nclass Feedback extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleClick = e => {\n        const name = e.target.name;\n        this.setState(prev=>({\n        [name]: prev[name] + 1\n        }))\n    }\n\n    countTotalFeedback() {\n        const good = this.state.good;\n        const neutral = this.state.neutral;\n        const bad = this.state.bad;\n        return good + neutral + bad;\n    }\n\n    countPositiveFeedbackPercentage() {\n        if(this.state.good){\n        return Math.round(this.state.good*100/this.countTotalFeedback())}\n        else{\n            return 0\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Please leave the feedback</h2>\n                <FeedbackOptions\n                    handleClick={this.handleClick}\n                    />\n                <Statistic\n                    good={this.state.good}\n                    neutral={this.state.neutral}\n                    bad={this.state.bad}\n                    total={this.state.total}\n                    countTotalFeedback = {this.countTotalFeedback()}\n                    countPositiveFeedbackPercentage = {this.countPositiveFeedbackPercentage()}\n                />\n            </>\n        )\n    }\n}\n\nexport default Feedback;\n\n\n\n","import React from 'react';\nimport Feedback from './components/Feedbacks'\n\n\nfunction App() {\n  return (\n<>\n  <Feedback/>\n</>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}